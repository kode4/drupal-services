diff --git a/app/sites/all/modules/contrib/captcha/captcha.module b/app/sites/all/modules/contrib/captcha/captcha.module
index 945651d..c8532c0 100644
--- a/app/sites/all/modules/contrib/captcha/captcha.module
+++ b/app/sites/all/modules/contrib/captcha/captcha.module
@@ -304,54 +304,6 @@ function captcha_element_process($element, &$form_state, $complete_form) {
 }
 
 /**
- * Implementation of hook_captcha_default_points_alter().
- *
- * Provide some default captchas only if defaults are not already
- * provided by other modules.
- */
-function captcha_captcha_default_points_alter(&$items) {
-  $modules = array(
-    'comment' => array(
-    ),
-    'contact' => array(
-      'contact_site_form',
-      'contact_personal_form'
-    ),
-    'forum' => array(
-      'forum_node_form',
-    ),
-    'user' => array(
-      'user_register_form',
-      'user_pass',
-      'user_login',
-      'user_login_block',
-    ),
-  );
-  // Add comment form_ids of all currently known node types.
-  foreach (node_type_get_names() as $type => $name) {
-    $modules['comment'][] = 'comment_node_' . $type . '_form';
-  }
-
-  foreach ($modules as $module => $form_ids) {
-    // Only give defaults if the module exists.
-    if (module_exists($module)) {
-      foreach ($form_ids as $form_id) {
-        // Ensure a default has not been provided already.
-        if (!isset($items[$form_id])) {
-          $captcha = new stdClass;
-          $captcha->disabled = FALSE;
-          $captcha->api_version = 1;
-          $captcha->form_id = $form_id;
-          $captcha->module = '';
-          $captcha->captcha_type = 'default';
-          $items[$form_id] = $captcha;
-        }
-      }
-    }
-  }
-}
-
-/**
  * Theme function for a CAPTCHA element.
  *
  * Render it in a fieldset if a description of the CAPTCHA
diff --git a/app/sites/all/modules/contrib/recaptcha/js/recaptcha.js b/app/sites/all/modules/contrib/recaptcha/js/recaptcha.js
new file mode 100644
index 0000000..8c1f97f
--- /dev/null
+++ b/app/sites/all/modules/contrib/recaptcha/js/recaptcha.js
@@ -0,0 +1,27 @@
+/**
+ * @file fix for modal forms
+ */
+(function ($) {
+
+  "use strict";
+
+  /**
+   * Makes sure that captchas can continue working after AJAX calls.
+   */
+  Drupal.behaviors.recaptchaReload = {
+    attach: function (context, settings) {
+      if (typeof(settings.recaptcha) != 'undefined' && typeof(grecaptcha) != 'undefined') {
+        if (document.readyState == 'complete') {
+          var el = $('.' + settings.recaptcha.class, context);
+          if (el.size() > 0 && el.children().size() == 0) {
+            grecaptcha.render(el.get(0), {
+              sitekey: el.data('sitekey'),
+              theme: el.data('theme')
+            });
+          }
+        }
+      }
+    }
+  }
+
+})(jQuery);
diff --git a/app/sites/all/modules/contrib/recaptcha/recaptcha.module b/app/sites/all/modules/contrib/recaptcha/recaptcha.module
index e0e31e6..15c8b13 100644
--- a/app/sites/all/modules/contrib/recaptcha/recaptcha.module
+++ b/app/sites/all/modules/contrib/recaptcha/recaptcha.module
@@ -119,9 +119,21 @@ function recaptcha_captcha($op, $captcha_type = '') {
             '#suffix' => $noscript,
           );
 
+          // Adds the recaptcha script.
+          $captcha['form']['recaptcha_widget']['#attached'] = array(
+            'js' => array(
+              'https://www.google.com/recaptcha/api.js' => array('external' => TRUE),
+              drupal_get_path('module', 'recaptcha') . '/js/recaptcha.js' => array(),
+              array(
+                'data' => array('recaptcha' => array('class' => 'g-recaptcha')),
+                'type' => 'setting',
+              ),
+            ),
+          );
+
           // @todo: #1664602: D7 does not yet support "async" in drupal_add_js().
           // drupal_add_js(url('https://www.google.com/recaptcha/api.js', array('query' => array('hl' => $language->language), 'absolute' => TRUE)), array('defer' => TRUE, 'async' => TRUE, 'type' => 'external'));
-          $data = array(
+          /*$data = array(
             '#tag' => 'script',
             '#value' => '',
             '#attributes' => array(
@@ -130,7 +142,7 @@ function recaptcha_captcha($op, $captcha_type = '') {
               'defer' => 'defer',
             ),
           );
-          drupal_add_html_head($data, 'recaptcha_api');
+          drupal_add_html_head($data, 'recaptcha_api');*/
         }
         else {
           // Fallback to Math captcha as reCAPTCHA is not configured.
