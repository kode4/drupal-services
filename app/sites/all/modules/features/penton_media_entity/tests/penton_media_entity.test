<?php

/**
 * @file
 * Tests for the penton_media_entity feature module
 */


/**
 * Class PentonmediaTests.
 *
 * Creates an media entity node and tests it exists.
 *
 * @author James Linnell.
 */
class PentonmediaTests extends DrupalWebTestCase {

  private $adminUser;

  /**
   * Metadata about the test case.
   */
  public static function getInfo() {
    return array(
      'name' => 'Penton Media Entity Feature',
      'description' => 'Tests that content can be created into the Penton Media Entity',
      'group' => 'Penton',
    );
  }

  /**
   * Perform setup tasks.
   */
  public function setUp() {
    parent::setUp(
      array(
        'statistics',
        'entityreference',
        'features',
        'role_field',
        'field_group',
        'date_api',
        'date',
        'penton_field_bases',
        'penton_media_entity',
      )
    );

    variable_set('statistics_enable_access_log', 1);
    variable_set('statistics_count_content_views', 1);
    $this->refreshVariables();

    // Create an admin user for running tests.
    $this->adminUser = $this->drupalCreateUser(
      array(
        'administer nodes',
        'access content',
        'view post access counter',
      )
    );
  }

  /**
   * Create a Media Entity.
   */
  public function testCreateMedia() {
    $this->drupalLogin($this->adminUser);
    $title = $this->randomName();
    $settings = array(
      'type' => 'media_entity',
      'promote' => 0,
      'title' => $title,
    );
    $node = $this->drupalCreateNode($settings);
    $this->verbose($node->nid);
    $this->drupalGet('node/' . $node->nid);
    $this->assertText($title, 'Node title was found');

    $this->drupalGet('node/' . $node->nid);
    $this->assertText('1 read', 'Stats module shows 1 read');

    $this->drupalGet('node/' . $node->nid);
    $this->assertText('2 reads', 'Stats module shows 2 reads');
  }
}
